{"version":3,"sources":["TeslaPageComponents/calculator_2022/DigitButton.js","TeslaPageComponents/calculator_2022/OperationButton.js","TeslaPageComponents/CarLoan/CarLoan.js","TeslaPageComponents/Mortgage/Mortgage.js","TeslaPageComponents/calculator_2022/Calculator.js","TeslaPageComponents/Todo/Todo.js","TeslaPageComponents/Todo/TodoList.js","TeslaPageComponents/Todo/FunctionTodo.js","TeslaPageComponents/pages/homepage.js","TeslaPageComponents/header/header.component.js","App.js","reportWebVitals.js","index.js"],"names":["DigitButton","dispatch","digit","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationButton","operation","CHOOSE_OPERATION","CarLoan","React","Component","className","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","currentOperand","includes","previousOperand","evaluate","length","slice","prev","parseInt","current","parseFloat","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","split","integer","decimal","format","Calculator","useReducer","useState","checked","setChecked","visibility","onChange","nextChecked","width","height","handleDiameter","style","Todo","todo","todos","toggleTodo","setTodos","todoEditing","setTodoEditing","editingText","setEditingText","complete","id","console","log","text","name","updatedTodo","filter","deleteTodo","e","target","value","updatedTodos","map","editTodo","TodoList","LOCAL_STORAGE_KEY","FunctionTodo","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","ref","prevTodos","uuidv4","completed","newTodos","find","HomePage","today","Date","date","getFullYear","getMonth","getDate","currentTime","toLocaleUpperCase","currentDate","time","toLocaleString","this","intervalID","setInterval","tick","clearInterval","setState","Header","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a335c3a8.chunk.js","sourcesContent":["import { ACTIONS } from './Calculator'\n\nexport default function DigitButton({dispatch, digit}){\n    return (\n    <button \n        onClick={ ()=> dispatch({\n            type: ACTIONS.ADD_DIGIT, \n            payload: {digit}\n        })}\n            >\n            {digit}\n        </button>\n        )\n}","import { ACTIONS } from './Calculator'\n\nexport default function OperationButton({dispatch, operation}){\n    return (<button \n        onClick={ ()=> \n            dispatch({\n                type: ACTIONS.CHOOSE_OPERATION, \n                payload: {operation}\n        })}\n            >\n            {operation}\n        </button>\n        )\n}","import React from 'react';\nimport './carLoan.css'\n\nconst CarLoan = () => {\n    return (<div className='car_loan'>\n        <h1>CarLoan</h1>\n        <div>\n        <p>Loan Amount</p>\n        <input></input>\n        </div>\n        <div>\n        <p>Interest rate (%)</p>\n        <input></input>\n       </div>\n       <div>\n        <p>Loan Period (months)</p>\n        <input></input>\n       </div>\n\n        <div>\n            <h4>Total cost of car loan</h4>\n            {/* <h4>{this.state.carLoan}</h4> */}\n        </div>\n\n        <div>\n            <h4>Monthly Payments</h4>\n            {/* <h4>{this.state.monthlyPayments}</h4> */}\n        </div>\n        \n    </div>)\n\n}\n\nexport default CarLoan\n\n// 1. divide interest rate by 100 # 3.11 x 100 = 0.0311\n// 2. divide the interest rate by 12  # 0.0311 / 12 = 0.0025\n// 3. Multiple the number by the pronciple amount # 25,000 x 0.0025 = 62.5 \n// 4. add 1 to the interest $ 1 + 0.0025 = 1.0025\n// 5. take the number raise the power of months # 1.0025^60 = 1.16\n// 6. use 1 to divide 1.16 = 0.86\n// 7. subtract this number from 1 # 1 - 0.86 = 0.14\n// 8. divide the number step to the number step 7 # 62.5 / 0.14 = 446.42\n\n","import React from 'react';\n\nclass Mortgage extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            title: 'Mortgage'\n        }\n    }\n    render(){\n        return (<div>\n            <h1>{this.state.title}</h1>\n            <h2> $$$$$$</h2>\n        </div>)\n    }\n}\n\nexport default Mortgage","/* eslint-disable default-case */\nimport './Calculator-Styles.css';\nimport { useReducer, useState } from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\nimport Mortgage from '../Mortgage/Mortgage';\nimport CarLoan from '../CarLoan/CarLoan';\nimport UseStateComponent from '../../functionComponents/useState/useStateComponent';\nimport ReactSwitch from 'react-switch';\n\nexport const ACTIONS = {\n    ADD_DIGIT: 'add-digit',\n    CHOOSE_OPERATION: 'choose-operation',\n    CLEAR: 'clear',\n    DELETE_DIGIT: 'delete-digit',\n    EVALUATE: 'evaluate',\n}\n\nfunction reducer(state, {type, payload}){\n    switch(type){\n        case ACTIONS.ADD_DIGIT:\n            if(state.overwrite){\n                return {\n                    ...state,\n                    currentOperand: payload.digit,\n                    overwrite: false,\n                }\n            }\n            if(payload.digit === \"0\" && state.currentOperand === \"0\") {\n                return state\n            } \n            if(payload.digit === \".\" && state.currentOperand.includes(\".\")){\n                return state\n            }\n            return {\n                ...state,\n                currentOperand: `${state.currentOperand || \"\"}${payload.digit}`, \n            }\n       \n        case ACTIONS.CHOOSE_OPERATION:\n            if(state.currentOperand == null && state.previousOperand == null) {\n                return state\n            }\n\n            if(state.currentOperand == null) {\n                return {\n                    ...state,\n                    operation: payload.operation,\n                }\n            }\n\n            if (state.previousOperand == null){\n                return {\n                    ...state,\n                    operation: payload.operation,\n                    previousOperand: state.currentOperand,\n                    currentOperand: null,\n                }\n            }\n            return {\n                ...state,\n                previousOperand: evaluate(state),\n                operation: payload.operation,\n                currentOperand: null\n            }\n\n        case ACTIONS.CLEAR:\n            return {}\n\n        case ACTIONS.DELETE_DIGIT:\n            if(state.overwrite) {\n                return {\n                    ...state,\n                    overwrite: false,\n                    currentOperand: null\n                }\n            }\n            if(state.currentOperand == null) return state\n            if(state.currentOperand.length === 1){\n                return {...state, currentOperand: null}\n            }\n            return {\n                ...state,\n                currentOperand: state.currentOperand.slice(0,-1)\n            }\n                \n    \n        \n\n        case ACTIONS.EVALUATE:\n            if (\n                state.operation == null ||\n                state.currentOperand == null ||\n                state.previousOperand == null\n            ) {\n                return state\n            }\n\n            return {\n                ...state,\n                overwrite: true,\n                previousOperand: null,\n                operation: null,\n                currentOperand:evaluate(state)\n            }\n        }\n} \n\nfunction evaluate({currentOperand, previousOperand, operation}){\n    const prev = parseInt(previousOperand)\n    const current = parseFloat(currentOperand)\n    if(isNaN(prev) || isNaN(current)) return \"\"\n    let computation = \"\"\n    switch (operation){\n        case \"+\":\n            computation = prev + current\n            break\n        case \"-\":\n            computation = prev - current\n            break\n        case \"*\":\n            computation = prev * current\n            break\n        case \"÷\":\n            computation = prev / current\n            break\n    }\n    return computation.toString()\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n    maximumFractionDigits:0,\n})\n\nfunction formatOperand(operand) {\n    if(operand == null) return\n    const [integer, decimal] = operand.split(\".\")\n    if (decimal == null) return INTEGER_FORMATTER.format(integer)\n    return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction Calculator() {\n    const [{ currentOperand, previousOperand, operation}, dispatch] = useReducer(reducer, {})\n    const [checked, setChecked] = useState(false);\n    const visibility = checked ? 'visible' : 'hidden';\n    const handleChange = nextChecked => { setChecked(nextChecked)}\n    return (\n        <div className='calculator_container'>\n            <div className=\"calculator-grid\">\n                <div className=\"output\">\n                    <div className=\"previous-operand\">{formatOperand(previousOperand)}{operation}</div>\n                    <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n                </div>\n                <button className=\"span-two\"\n                    onClick= {()=> dispatch({type:ACTIONS.CLEAR})}>AC</button>\n                <button onClick={() => dispatch({type: ACTIONS.DELETE_DIGIT})}>DEL</button>\n                <OperationButton operation=\"÷\" dispatch={dispatch}/>\n                <DigitButton digit=\"1\" dispatch={dispatch}/>\n                <DigitButton digit=\"2\" dispatch={dispatch}/>\n                <DigitButton digit=\"3\" dispatch={dispatch}/>\n                <OperationButton operation=\"*\" dispatch={dispatch}/>\n                <DigitButton digit=\"4\" dispatch={dispatch}/>\n                <DigitButton digit=\"5\" dispatch={dispatch}/>\n                <DigitButton digit=\"6\" dispatch={dispatch}/>\n                <OperationButton operation=\"+\" dispatch={dispatch}/>\n                <DigitButton digit=\"7\" dispatch={dispatch}/>\n                <DigitButton digit=\"8\" dispatch={dispatch}/>\n                <DigitButton digit=\"9\" dispatch={dispatch}/>\n                <OperationButton operation=\"-\" dispatch={dispatch}/>\n                <DigitButton digit=\".\" dispatch={dispatch}/>\n                <DigitButton digit=\"0\" dispatch={dispatch}/>\n                <button \n                    className=\"span-two\" \n                    onClick= { ()=> dispatch({type: ACTIONS.EVALUATE })}\n                >=</button>\n            </div>\n            {/* carloan calculator */}\n            <div className='carloan_calculator'>\n            <h2>Toggle to {`${checked?'Hide':'Show'}` } CARLOAN Calculator</h2>\n            <ReactSwitch \n                onChange={handleChange} \n                checked={checked}\n                width = {68}\n                height = {40}\n                handleDiameter = {40}/>\n                    <div style={{visibility}}>\n                        <CarLoan />\n                    </div>       \n                    \n            </div>\n            \n        </div>\n  \n    )\n}\n\nexport default Calculator\n\n\n// https://www.youtube.com/watch?v=DgRrrOt0Vr8&t=73s","import React from 'react'\n\nexport default function Todo({ todo, todos, toggleTodo, setTodos, todoEditing, setTodoEditing, editingText, setEditingText }) {\n    function handleTodoClick(){\n        toggleTodo(todo.id)\n    }\n\n    function deleteTodo(id) {\n        //get updated todo array\n        const updatedTodo = [...todos].filter((todo) => todo.id !== id);\n        setTodos(updatedTodo)\n    }\n\n    function editTodo(id){\n        const updatedTodos = [...todos].map((todo) =>{\n            if(todo.id === id){\n                todo.name = editingText\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n        setTodoEditing(null)\n        setEditingText('')\n    };\n\n    return (\n        <div>\n            <label>\n                <input \n                    type = \"checkbox\" \n                    checked = {todo.complete} \n                    onChange = {handleTodoClick}\n                />\n                {console.log(todo.text)}\n                {todo.name}\n\n\n                \n                <button onClick = {() => deleteTodo(todo.id) }>delete</button>\n\n\n                {todoEditing === todo.id\n                ? \n                (<input type='text' \n                        onChange={(e) => setEditingText(e.target.value)} \n                        />) \n                            : (\n                                <div>{null}</div>\n                            )}\n\n                { todoEditing === todo.id \n                    ? \n                (<button onClick = {() => editTodo(todo.id)}>Submit Edit</button>) \n                \n                : \n                (<button onClick={() => setTodoEditing(todo.id)}>edit</button>)  }\n                \n                \n\n                \n            </label>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function TodoList({todos, toggleTodo, setTodos, todoEditing, setTodoEditing , editingText, setEditingText }) {\n    return (\n         todos.map(todo => {\n             return <Todo key ={todo.id} \n                            toggleTodo={toggleTodo} \n                            todos = {todos}\n                            todo={todo}\n                            setTodos = {setTodos}\n\n                            todoEditing = {todoEditing}\n                            setTodoEditing = {setTodoEditing}\n                            editingText = {editingText}\n                            setEditingText = {setEditingText}\n                            \n                            />\n         })\n    )\n}\n ","import React, { useState, useRef, useEffect } from 'react'\nimport TodoList from './TodoList'\nimport {v4 as uuidv4} from 'uuid'\n// import Example from './Example'\n// import ToggleComponent from './useToggle/ToggleComponent'\n// import TimeoutComponent from './useTimeout/TimeoutComponent'\n// import DebounceComponent from './useDebounce/DebounceComponent'\n// import UpdateEffectComponent from './useUpdateEffect/UpdateEffectComponent'\n// import ArrayComponent from './useArray/ArrayComponent'\n// import Album from './Album'\n// import Calculator from '../calculator_2022/Calculator'\nimport './functionComponents.css'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nexport default function FunctionTodo() {\n    const[todos, setTodos] = useState([])\n    const todoNameRef = useRef()\n    const [todoEditing, setTodoEditing] = useState(null)\n    const [editingText, setEditingText] = useState('')\n\n    // to load retreive saved todos\n    useEffect(() => { \n        const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n        if (storedTodos) setTodos(storedTodos)\n    },[])\n\n    // to save todos \n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos) )\n    }, [todos])\n\n    // to toggle complete or not complete, [...todos] to get a copy of list\n    function toggleTodo(id){\n        const newTodos = [...todos]\n        const todo = newTodos.find(todo => todo.id === id)\n        todo.complete = !todo.complete\n        setTodos(newTodos) \n    }\n\n    function handleAddTodo(e){\n        const name = todoNameRef.current.value\n         \n        if(name === '') return\n        setTodos(prevTodos => {\n            return [...prevTodos, {id: uuidv4(), name: name, completed: false} ]\n\n        })\n        console.log(name)\n        todoNameRef.current.value = null\n\n    }\n    function handleClearTodos(){\n        const newTodos = todos.filter(todo => !todo.completed)\n        setTodos(newTodos)\n    }\n\n \n    return (\n        <div>\n            \n            <div className='todo'>\n            <h1>Todo function</h1>\n             <input ref = {todoNameRef} type = \"text\"/>\n                <button onClick = {handleAddTodo}>Add todo</button>\n                <button onClick = {handleClearTodos}>clear complete</button>\n                {/* where the list starts */}\n                <TodoList todos = {todos} \n                            toggleTodo={toggleTodo} \n                                setTodos={setTodos}\n                                todoEditing = {todoEditing}\n                                setTodoEditing = {setTodoEditing}\n                                editingText = {editingText} \n                                setEditingText = {setEditingText}\n                                /> \n                <div>{todos.filter(todo => !todo.complete).length} left to do </div>\n            </div>\n            \n             \n        </div>\n    )\n}\n\n\n\n{/* <Example/>\n<ToggleComponent/>\n<TimeoutComponent/>\n <DebounceComponent/>\n<UpdateEffectComponent/>\n<ArrayComponent/>\n<Album /> */}","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nclass HomePage extends React.Component {\n    constructor(){\n        super()\n        var today = new Date(),\n        date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n        this.state = {\n            currentTime: Date().toLocaleUpperCase(),\n            currentDate: date,\n            time: new Date().toLocaleString()\n            \n        }\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(\n            () => this.tick(),\n            1000\n        )\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID);\n    }\n    tick(){\n        this.setState({\n            time: new Date().toLocaleString()\n        });\n    }\n\n    render(){\n\n        return (\n            <div>\n                <h1> Home Page</h1>\n                <h2>{this.state.currentDate} { this.state.time} </h2>\n                <h2>Weather</h2>\n                <h2> google bookmark</h2>\n            </div>\n        )\n    }\n}\nexport default HomePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.styles.css'\n\nconst Header = () => (\n    <div className='header_container'>\n        \n        <Link to='/reactTodoHook/' className='option'>HOME </Link>\n        <Link className=\"option\" to='/reactTodoHook/calculator'>\n            CALCULATOR </Link>\n        <Link className='option' to='/reactTodoHook/todo'>\n            TODO </Link>\n        <Link className='option' to='/reactTodoHook/expensemanager'>\n        EXPENSE_MANAGER </Link>  \n    </div>\n)\n\nexport default Header","import React from 'react';\nimport Calculator from './TeslaPageComponents/calculator_2022/Calculator';\nimport FunctionTodo from './TeslaPageComponents/Todo/FunctionTodo';\nimport HomePage from './TeslaPageComponents/pages/homepage';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './TeslaPageComponents/header/header.component';\nimport './App.css'\n\nfunction App() {\n    return (\n        <div className='App'>\n        <Switch>\n            <Route exact path='/reactTodoHook/' component = { HomePage }/>\n            <Route path = '/reactTodoHook/calculator' component = { Calculator }/>\n            <Route path = '/reactTodoHook/todo' component ={ FunctionTodo }/>\n        </Switch>\n        <Header/>\n        </div>\n       \n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import TodoList from './classComponents/TodoList';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}