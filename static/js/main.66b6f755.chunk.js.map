{"version":3,"sources":["calculator_2022/DigitButton.js","calculator_2022/OperationButton.js","calculator_2022/Calculator.js","functionComponents/Todo.js","functionComponents/TodoList.js","functionComponents/FunctionTodo.js","pages/homepage.js","header/header.component.js","App.js","reportWebVitals.js","index.js"],"names":["DigitButton","dispatch","digit","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationButton","operation","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","currentOperand","includes","previousOperand","evaluate","length","slice","prev","parseInt","current","parseFloat","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","split","integer","decimal","format","Calculator","useReducer","className","Todo","todo","todos","toggleTodo","setTodos","todoEditing","setTodoEditing","editingText","setEditingText","checked","complete","onChange","id","console","log","text","name","updatedTodo","filter","deleteTodo","e","target","value","updatedTodos","map","editTodo","TodoList","LOCAL_STORAGE_KEY","FunctionTodo","useState","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","ref","prevTodos","uuidv4","completed","newTodos","find","HomePage","Header","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66b6f755.chunk.js","sourcesContent":["import { ACTIONS } from './Calculator'\n\nexport default function DigitButton({dispatch, digit}){\n    return (\n    <button \n        onClick={ ()=> dispatch({\n            type: ACTIONS.ADD_DIGIT, \n            payload: {digit}\n        })}\n            >\n            {digit}\n        </button>\n        )\n}","import { ACTIONS } from './Calculator'\n\nexport default function OperationButton({dispatch, operation}){\n    return (<button \n        onClick={ ()=> \n            dispatch({\n                type: ACTIONS.CHOOSE_OPERATION, \n                payload: {operation}\n        })}\n            >\n            {operation}\n        </button>\n        )\n}","/* eslint-disable default-case */\nimport './Calculator-Styles.css';\nimport { useReducer } from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\n\nexport const ACTIONS = {\n    ADD_DIGIT: 'add-digit',\n    CHOOSE_OPERATION: 'choose-operation',\n    CLEAR: 'clear',\n    DELETE_DIGIT: 'delete-digit',\n    EVALUATE: 'evaluate',\n}\n\nfunction reducer(state, {type, payload}){\n    switch(type){\n        case ACTIONS.ADD_DIGIT:\n            if(state.overwrite){\n                return {\n                    ...state,\n                    currentOperand: payload.digit,\n                    overwrite: false,\n                }\n            }\n            if(payload.digit === \"0\" && state.currentOperand === \"0\") {\n                return state\n            } \n            if(payload.digit === \".\" && state.currentOperand.includes(\".\")){\n                return state\n            }\n            return {\n                ...state,\n                currentOperand: `${state.currentOperand || \"\"}${payload.digit}`, \n            }\n       \n        case ACTIONS.CHOOSE_OPERATION:\n            if(state.currentOperand == null && state.previousOperand == null) {\n                return state\n            }\n\n            if(state.currentOperand == null) {\n                return {\n                    ...state,\n                    operation: payload.operation,\n                }\n            }\n\n            if (state.previousOperand == null){\n                return {\n                    ...state,\n                    operation: payload.operation,\n                    previousOperand: state.currentOperand,\n                    currentOperand: null,\n                }\n            }\n            return {\n                ...state,\n                previousOperand: evaluate(state),\n                operation: payload.operation,\n                currentOperand: null\n            }\n\n        case ACTIONS.CLEAR:\n            return {}\n\n        case ACTIONS.DELETE_DIGIT:\n            if(state.overwrite) {\n                return {\n                    ...state,\n                    overwrite: false,\n                    currentOperand: null\n                }\n            }\n            if(state.currentOperand == null) return state\n            if(state.currentOperand.length === 1){\n                return {...state, currentOperand: null}\n            }\n            return {\n                ...state,\n                currentOperand: state.currentOperand.slice(0,-1)\n            }\n                \n    \n        \n\n        case ACTIONS.EVALUATE:\n            if (\n                state.operation == null ||\n                state.currentOperand == null ||\n                state.previousOperand == null\n            ) {\n                return state\n            }\n\n            return {\n                ...state,\n                overwrite: true,\n                previousOperand: null,\n                operation: null,\n                currentOperand:evaluate(state)\n            }\n        }\n} \n\nfunction evaluate({currentOperand, previousOperand, operation}){\n    const prev = parseInt(previousOperand)\n    const current = parseFloat(currentOperand)\n    if(isNaN(prev) || isNaN(current)) return \"\"\n    let computation = \"\"\n    switch (operation){\n        case \"+\":\n            computation = prev + current\n            break\n        case \"-\":\n            computation = prev - current\n            break\n        case \"*\":\n            computation = prev * current\n            break\n        case \"÷\":\n            computation = prev / current\n            break\n    }\n    return computation.toString()\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n    maximumFractionDigits:0,\n})\n\nfunction formatOperand(operand) {\n    if(operand == null) return\n    const [integer, decimal] = operand.split(\".\")\n    if (decimal == null) return INTEGER_FORMATTER.format(integer)\n    return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction Calculator() {\n    const [{ currentOperand, previousOperand, operation}, dispatch] = useReducer(reducer, {})\n    return (\n        <div className=\"calculator-grid\">\n            <div className=\"output\">\n                <div className=\"previous-operand\">{formatOperand(previousOperand)}{operation}</div>\n                <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n            </div>\n            <button className=\"span-two\"\n                onClick= {()=> dispatch({type:ACTIONS.CLEAR})}>AC</button>\n            <button onClick={() => dispatch({type: ACTIONS.DELETE_DIGIT})}>DEL</button>\n            <OperationButton operation=\"÷\" dispatch={dispatch}/>\n            <DigitButton digit=\"1\" dispatch={dispatch}/>\n            <DigitButton digit=\"2\" dispatch={dispatch}/>\n            <DigitButton digit=\"3\" dispatch={dispatch}/>\n            <OperationButton operation=\"*\" dispatch={dispatch}/>\n            <DigitButton digit=\"4\" dispatch={dispatch}/>\n            <DigitButton digit=\"5\" dispatch={dispatch}/>\n            <DigitButton digit=\"6\" dispatch={dispatch}/>\n            <OperationButton operation=\"+\" dispatch={dispatch}/>\n            <DigitButton digit=\"7\" dispatch={dispatch}/>\n            <DigitButton digit=\"8\" dispatch={dispatch}/>\n            <DigitButton digit=\"9\" dispatch={dispatch}/>\n            <OperationButton operation=\"-\" dispatch={dispatch}/>\n            <DigitButton digit=\".\" dispatch={dispatch}/>\n            <DigitButton digit=\"0\" dispatch={dispatch}/>\n            <button \n                className=\"span-two\" \n                onClick= { ()=> dispatch({type: ACTIONS.EVALUATE })}\n            >=</button>\n\n\n        </div>\n    )\n}\n\nexport default Calculator","import React from 'react'\n\nexport default function Todo({ todo, todos, toggleTodo, setTodos, todoEditing, setTodoEditing, editingText, setEditingText }) {\n    function handleTodoClick(){\n        toggleTodo(todo.id)\n    }\n\n    function deleteTodo(id) {\n        //get updated todo array\n        const updatedTodo = [...todos].filter((todo) => todo.id !== id);\n        setTodos(updatedTodo)\n    }\n\n    function editTodo(id){\n        const updatedTodos = [...todos].map((todo) =>{\n            if(todo.id === id){\n                todo.name = editingText\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n        setTodoEditing(null)\n        setEditingText('')\n    };\n\n    return (\n        <div>\n            <label>\n                <input \n                    type = \"checkbox\" \n                    checked = {todo.complete} \n                    onChange = {handleTodoClick}\n                />\n                {console.log(todo.text)}\n                {todo.name}\n\n\n                \n                <button onClick = {() => deleteTodo(todo.id) }>delete</button>\n\n\n                {todoEditing === todo.id\n                ? \n                (<input type='text' \n                        onChange={(e) => setEditingText(e.target.value)} \n                        />) \n                            : (\n                                <div>{null}</div>\n                            )}\n\n                { todoEditing === todo.id \n                    ? \n                (<button onClick = {() => editTodo(todo.id)}>Submit Edit</button>) \n                \n                : \n                (<button onClick={() => setTodoEditing(todo.id)}>edit</button>)  }\n                \n                \n\n                \n            </label>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport Todo from '../functionComponents/Todo'\n\nexport default function TodoList({todos, toggleTodo, setTodos, todoEditing, setTodoEditing , editingText, setEditingText }) {\n    return (\n         todos.map(todo => {\n             return <Todo key ={todo.id} \n                            toggleTodo={toggleTodo} \n                            todos = {todos}\n                            todo={todo}\n                            setTodos = {setTodos}\n\n                            todoEditing = {todoEditing}\n                            setTodoEditing = {setTodoEditing}\n                            editingText = {editingText}\n                            setEditingText = {setEditingText}\n                            \n                            />\n         })\n    )\n}\n ","import React, { useState, useRef, useEffect } from 'react'\nimport TodoList from './TodoList'\nimport {v4 as uuidv4} from 'uuid'\nimport Example from './Example'\nimport ToggleComponent from './useToggle/ToggleComponent'\nimport TimeoutComponent from './useTimeout/TimeoutComponent'\nimport DebounceComponent from './useDebounce/DebounceComponent'\nimport UpdateEffectComponent from './useUpdateEffect/UpdateEffectComponent'\nimport ArrayComponent from './useArray/ArrayComponent'\nimport Album from './Album'\nimport Calculator from '../calculator_2022/Calculator'\nimport './functionComponents.css'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nexport default function FunctionTodo() {\n    const[todos, setTodos] = useState([])\n    const todoNameRef = useRef()\n    const [todoEditing, setTodoEditing] = useState(null)\n    const [editingText, setEditingText] = useState('')\n\n    // to load retreive saved todos\n    useEffect(() => { \n        const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n        if (storedTodos) setTodos(storedTodos)\n    },[])\n\n    // to save todos \n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos) )\n    }, [todos])\n\n    // to toggle complete or not complete, [...todos] to get a copy of list\n    function toggleTodo(id){\n        const newTodos = [...todos]\n        const todo = newTodos.find(todo => todo.id === id)\n        todo.complete = !todo.complete\n        setTodos(newTodos) \n    }\n\n    function handleAddTodo(e){\n        const name = todoNameRef.current.value\n         \n        if(name === '') return\n        setTodos(prevTodos => {\n            return [...prevTodos, {id: uuidv4(), name: name, completed: false} ]\n\n        })\n        console.log(name)\n        todoNameRef.current.value = null\n\n    }\n    function handleClearTodos(){\n        const newTodos = todos.filter(todo => !todo.completed)\n        setTodos(newTodos)\n    }\n\n \n    return (\n        <div>\n            \n            <div className='todo'>\n            <h1>Todo function</h1>\n             <input ref = {todoNameRef} type = \"text\"/>\n                <button onClick = {handleAddTodo}>Add todo</button>\n                <button onClick = {handleClearTodos}>clear complete</button>\n                {/* where the list starts */}\n                <TodoList todos = {todos} \n                            toggleTodo={toggleTodo} \n                                setTodos={setTodos}\n                                todoEditing = {todoEditing}\n                                setTodoEditing = {setTodoEditing}\n                                editingText = {editingText} \n                                setEditingText = {setEditingText}\n                                /> \n                <div>{todos.filter(todo => !todo.complete).length} left to do </div>\n            </div>\n            \n             \n        </div>\n    )\n}\n\n\n\n{/* <Example/>\n<ToggleComponent/>\n<TimeoutComponent/>\n <DebounceComponent/>\n<UpdateEffectComponent/>\n<ArrayComponent/>\n<Album /> */}","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction HomePage() {\n    return (\n        <div>\n            <h1> Home Page</h1>\n            <h2>Time</h2>\n            <h2>Weather</h2>\n            <h2> google bookmark</h2>\n        </div>\n    )\n}\nexport default HomePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.styles.css'\n\nconst Header = () => (\n    <div className='header_container'>\n        \n        <Link to='/home' className='option'>HOME </Link>\n        <Link className=\"option\" to='/calculator'>\n            CALCULATOR </Link>\n        <Link className='option' to='/todo'>\n            TODO </Link>\n    </div>\n)\n\nexport default Header","import React from 'react';\nimport Calculator from './calculator_2022/Calculator';\nimport FunctionTodo from './functionComponents/FunctionTodo';\nimport HomePage from './pages/homepage';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './header/header.component';\nimport './App.css'\n\nfunction App() {\n    return (\n        <div className='App'>\n        \n        <Switch>\n            <Route exact path='/home' component = { HomePage }/>\n            <Route path = '/calculator' component = { Calculator }/>\n            <Route path = '/todo' component ={ FunctionTodo }/>\n        </Switch>\n        <Header/>\n        </div>\n       \n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import TodoList from './classComponents/TodoList';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}